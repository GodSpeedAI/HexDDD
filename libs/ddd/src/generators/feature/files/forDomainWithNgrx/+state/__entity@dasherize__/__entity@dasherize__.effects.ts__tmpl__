import { inject, Injectable } from '@angular/core';
import { createEffect, Actions, ofType } from '@ngrx/effects';
import { catchError, map, switchMap } from 'rxjs/operators';
import { of } from 'rxjs';
import { <%= camelize(entity) %>Actions } from './<%= dasherize(entity) %>.actions';
import { <%= classify(entity) %>DataService } from '../../infrastructure/<%= dasherize(entity) %>.data.service';

@Injectable()
export class <%= classify(entity) %>Effects {

  private actions$ = inject(Actions);
  private <%= camelize(entity) %>DataService = inject(<%= classify(entity) %>DataService);

  load<%= classify(entity) %>$ = createEffect(() =>
    this.actions$.pipe(
      ofType(<%= camelize(entity) %>Actions.load<%= classify(entity) %>),
      switchMap((/* action */) =>
        this.<%= camelize(entity) %>DataService.load().pipe(
          map((<%= camelize(entity) %>List) => <%= camelize(entity) %>Actions.load<%= classify(entity) %>Success({ <%= camelize(entity) %>List })),
          catchError((error) => of(<%= camelize(entity) %>Actions.load<%= classify(entity) %>Failure({ error })))
        )
      )
    )
  );
}
